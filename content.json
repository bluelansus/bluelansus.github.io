{"meta":{"title":"Life-long Learning","subtitle":null,"description":null,"author":"LANSUS","url":"http://lansus.coding.me","root":"/"},"pages":[{"title":"素","date":"2019-04-25T03:03:15.000Z","updated":"2020-09-14T07:35:37.797Z","comments":true,"path":"about/index.html","permalink":"http://lansus.coding.me/about/index.html","excerpt":"","text":"本人已近而立之年，庸碌上班，一事无成，实为羞愧。 人生唯一坚持之久之事竟是Dota,实为笑话，暗思良久，竟无一件能我安心之习惯，惭愧之至。 身居合肥，供事于一家小型新能源创业公司，三年之久，极度闲暇，慌张不已。 希望能够提升自我，看看世界，学学新的技术，多看很多的书。看尽不同的人生，这样才能站在巨人的肩上。 关于我 QQ： 1276166157 lansus 的博客"},{"title":"categories","date":"2019-04-25T06:28:15.000Z","updated":"2020-09-14T07:35:37.797Z","comments":false,"path":"categories/index.html","permalink":"http://lansus.coding.me/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-04-25T06:27:00.000Z","updated":"2020-09-14T07:35:37.856Z","comments":false,"path":"tags/index.html","permalink":"http://lansus.coding.me/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"elementUi 组件01","slug":"elementUi-组件01","date":"2020-09-14T08:23:46.000Z","updated":"2020-09-16T03:25:03.064Z","comments":true,"path":"elementUi-组件01.html","link":"","permalink":"http://lansus.coding.me/elementUi-组件01.html","excerpt":"","text":"ElementUI 组件框架使用在使用elemfentUI 的时候要配合Vue或者React脚本来使用，不然无法预览效果，我这里使用的vue 框架，所以在html要实例化Vue,并且绑定到 租间房父布局，例如： 12345678910111213141516171819202122232425262728&lt;html &gt; &lt;head&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/element-ui/lib/theme-chalk/index.css&quot;&gt; &lt;!-- import Vue before Element --&gt; &lt;script src=&quot;https://unpkg.com/vue/dist/vue.js&quot;&gt;&lt;/script&gt; &lt;!-- import JavaScript --&gt; &lt;script src=&quot;https://unpkg.com/element-ui/lib/index.js&quot;&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;div id=&quot;app&quot;&gt; &lt;el-button&gt; 登录 &lt;/el-button&gt;&lt;/div&gt;&lt;/body&gt;&lt;script&gt;var vm=new Vue(&#123;el:&quot;#app&quot;,&#125;)&lt;/script&gt;&lt;/html&gt; CSS居中div 居中设置div的宽高，然后设置margin：0 auto ,可以让子元素居中 块级元素水平居中设置 父布局text-align:center来设置水平居中 flex布局居中设置父布局为flex，布局并且设置12display:flex;align-items:center; layout 布局el-row 标签和el-col来配合显示行列布局：1234567&lt;el-row&gt;&lt;el-clo&gt; &lt;div span=&quot;12&quot; style=&quot;background-color:red&quot;&gt; &lt;div span=&quot;12&quot; style=&quot;background-color:green&quot;&gt; &lt;/div&gt;&lt;/el-clo&gt;&lt;/el-row&gt; 详细属性 【Row 属性】 gutter 可以可以设置间距 type 设置布局，例如type=&quot;flex&quot;,设置成flex布局后，使用justify= start |end|center| space-between | space-around 来设置对齐-align 布局在flex布局下，参数有top | middle |bottom | 【Col 属性】 span 根据占比来控制宽度 offset分栏偏移 push 向右移动格数 pull向左移动格数 Container布局容器为了方便开发，设计出了布局容器el-container，作为父布局，只能包含四种子子布局： el-header 标题栏 el-aside 侧边栏 el-main 内容栏 el-footer 底部栏 【注】：el-container中，包含el-aside和el-main的时候，布局时从左到右，包含el-header和el-footer的时候，就会布局从上到下,el-aside中布局也是从上到下. 1234567891011121314151617181920212223242526272829303132&lt;body&gt; &lt;div id=&quot;app&quot;&gt; &lt;el-container&gt; &lt;el-header style=&quot;background-color: black;&quot; &gt; &lt;/el-header&gt; &lt;/el-container&gt;&lt;el-container&gt;&lt;el-aside style=&quot; background-color: red; height: 500px; width: 200px;&quot;&gt;&lt;/el-aside&gt;&lt;el-main style=&quot; background-color: green; height: 500px; width: 200px;&quot; &gt;&lt;/el-main&gt;&lt;/el-container&gt;&lt;el-container&gt; &lt;el-footer style=&quot;background-color: hotpink;&quot;&gt; &lt;/el-footer&gt;&lt;/el-container&gt;&lt;/div&gt;&lt;/body&gt;&lt;script&gt; new Vue().$mount(&apos;#app&apos;)&lt;/script&gt;&lt;/html&gt; Button按钮el-button 来显示 按钮其中属性包括： type 可以设置成 primary 主要按钮 success 成功按钮 … round 圆角按钮 circle 圆形按钮 plain 朴素按钮 （默认按钮） disable 是否不可点击 loading 是否加载 -icon图标名 文字链接el-link 来显示文字链接。主要使用的属性有： type 类似于按钮 icon 显示图标。类似于按钮 disabled 是否可点击 underline 是否显示下划线,例如显示下划线。 :inderline=true el-radio单选 &amp; el-radio-button 单选按钮 disabled 是否可点击 border 事都显示边框 size 大小","categories":[{"name":"html5","slug":"html5","permalink":"http://lansus.coding.me/categories/html5/"}],"tags":[{"name":"ElementUI","slug":"ElementUI","permalink":"http://lansus.coding.me/tags/ElementUI/"}]},{"title":"","slug":"purple","date":"2020-09-14T08:20:36.808Z","updated":"2020-09-12T03:03:45.897Z","comments":true,"path":"purple.html","link":"","permalink":"http://lansus.coding.me/purple.html","excerpt":"","text":":root { --control-text-color: #777; --select-text-bg-color: rgba(223, 197, 223); /*#7e66992e;*/ /* side bar */ --side-bar-bg-color: rgb(255, 255, 255); --active-file-text-color: #8163bd; --active-file-bg-color: #E9E4F0; --item-hover-bg-color: #E9E4F0; --active-file-border-color: #8163bd; --title-color: #6c549c; --font-sans-serif: 'Ubuntu', 'Source Sans Pro', sans-serif !important; --font-monospace: 'Fira Code', 'Roboto Mono', monospace !important; --purple-1: #8163bd; --purple-2: #79589F; --purple-3: #fd5eb8; --purple-light-1: rgba(99, 99, 172, .05); --purple-light-2: rgba(99, 99, 172, .1); --purple-light-3: rgba(99, 99, 172, .2); --purple-light-4: rgba(129, 99, 189, .3); --purple-light-5: #E9E4F0; --purple-light-6: rgba(129, 99, 189, .8); } /* html { font-size: 16px; } */ body { font-family: var(--font-sans-serif); color: #34495e; -webkit-font-smoothing: antialiased; line-height: 1.6rem; letter-spacing: 0; margin: 0; overflow-x: hidden; } /* 页边距 和 页面大小 */ #write { padding-left: 6ch; padding-right: 6ch; margin: 0 auto; } #write p { line-height: 1.6rem; word-spacing: .05rem; } #write ol li { padding-left: 0.5rem; } #write > ul:first-child, #write > ol:first-child { margin-top: 30px; } body > *:first-child { margin-top: 0 !important; } body > *:last-child { margin-bottom: 0 !important; } a { color: var(--purple-1); padding: 0 2px; text-decoration: none; } .md-content { color: var(--purple-light-6); } #write a { border-bottom: 1px solid var(--purple-1); color: var(--purple-1); text-decoration: none; } h1, h2, h3, h4, h5, h6 { position: relative; margin-top: 1rem; margin-bottom: 0.5rem; /* font-weight: bold; */ font-weight: 500 !important; line-height: 1.4; cursor: text; color: var(--title-color); font-family: var(--font-sans-serif); } h1:hover a.anchor, h2:hover a.anchor, h3:hover a.anchor, h4:hover a.anchor, h5:hover a.anchor, h6:hover a.anchor { text-decoration: none; } h1 tt, h1 code { font-size: inherit !important; } h2 tt, h2 code { font-size: inherit !important; } h3 tt, h3 code { font-size: inherit !important; } h4 tt, h4 code { font-size: inherit !important; } h5 tt, h5 code { font-size: inherit !important; } h6 tt, h6 code { font-size: inherit !important; } h1 { padding-bottom: .4rem; font-size: 2.2rem; line-height: 1.3; } h1 { text-align: center; padding-bottom: 0.3em; font-size: 2.2em; line-height: 1.2; margin: 2.4em auto 1.2em; } h1:after { content: ''; display: block; margin: 0.2em auto 0; width: 100px; height: 2px; border-bottom: 2px solid var(--title-color); } h2 { margin: 1.6em auto 0.5em; padding-left: 10px; line-height: 1.4; font-size: 1.8em; border-left: 9px solid var(--title-color); border-bottom: 1px solid var(--title-color); } h3 { font-size: 1.5rem; margin: 1.2em auto 0.5em; } h4 { font-size: 1.3rem; } h5 { font-size: 1.2rem; } h6 { font-size: 1.1rem; } p, blockquote, ul, ol, dl, table { margin: 0.8em 0; } li > ol, li > ul { margin: 0 0; } hr { height: 2px; padding: 0; margin: 16px 0; background-color: #e7e7e7; border: 0 none; overflow: hidden; box-sizing: content-box; } body > h2:first-child { margin-top: 0; padding-top: 0; } body > h1:first-child { margin-top: 0; padding-top: 0; } body > h1:first-child + h2 { margin-top: 0; padding-top: 0; } body > h3:first-child, body > h4:first-child, body > h5:first-child, body > h6:first-child { margin-top: 0; padding-top: 0; } a:first-child h1, a:first-child h2, a:first-child h3, a:first-child h4, a:first-child h5, a:first-child h6 { margin-top: 0; padding-top: 0; } h1 p, h2 p, h3 p, h4 p, h5 p, h6 p { margin-top: 0; } li p.first { display: inline-block; } ul, ol { padding-left: 30px; } ul:first-child, ol:first-child { margin-top: 0; } ul:last-child, ol:last-child { margin-bottom: 0; } /* 引用 */ blockquote { /* margin-left: 1rem; */ border-left: 4px solid var(--purple-light-4); padding: 10px 15px; color: #777; background-color: var(--purple-light-1); } /* 表格 */ table { padding: 0; word-break: initial; } table tr { border-top: 1px solid #dfe2e5; margin: 0; padding: 0; } /* 表格 背景色 */ table tr:nth-child(2n), thead { background-color: var(--purple-light-1); } #write table thead th { background-color: var(--purple-light-2); } table tr th { font-weight: bold; border: 1px solid #dfe2e5; border-bottom: 0; text-align: left; margin: 0; padding: 6px 13px; } table tr td { border: 1px solid #dfe2e5; text-align: left; margin: 0; padding: 6px 13px; } table tr th:first-child, table tr td:first-child { margin-top: 0; } table tr th:last-child, table tr td:last-child { margin-bottom: 0; } /* 粗体 */ #write strong { padding: 0 2px; color: var(--purple-1); } /* 斜体 */ #write em { padding: 0 5px 0 2px; /* font-style: normal; */ color: #42b983; } /* inline code */ #write code, tt { padding: 2px 4px; border-radius: 2px; font-family: var(--font-monospace); font-size: 0.92rem; color: var(--purple-3); background-color: rgba(99, 99, 172, .05); } tt { margin: 0 2px; } #write .md-footnote { background-color: #f8f8f8; color: var(--purple-3); } /* heighlight. */ #write mark { background-color: #fbd3ea; border-radius: 2px; padding: 2px 4px; margin: 0 2px; } #write del { padding: 1px 2px; } .md-task-list-item > input { margin-left: -1.3em; } @media print { html { font-size: 0.9rem; } table, pre { page-break-inside: avoid; } pre { word-wrap: break-word; } } #write pre.md-meta-block { padding: 1rem; font-size: 85%; line-height: 1.45; background-color: #f7f7f7; border: 0; border-radius: 3px; color: #777777; margin-top: 0 !important; } .mathjax-block > .code-tooltip { bottom: .375rem; } /* 图片 */ .md-image > .md-meta { border-radius: 3px; font-family: var(--font-monospace); padding: 2px 0 0 4px; font-size: 0.9em; color: inherit; } p .md-image:only-child{ width: auto; text-align: left; margin-left: 2rem; } .md-tag { color: inherit; } /* 当 “![shadow-随便写]()”写时，会有阴影 */ .md-image img[alt|='shadow'] { /* box-shadow: 0 4px 24px -6px #ddd; */ box-shadow:var(--purple-light-2) 0px 10px 15px; } #write a.md-toc-inner { line-height: 1.6; white-space: pre-line; border-bottom: none; font-size: 0.9rem; } #typora-quick-open { border: 1px solid #ddd; background-color: #f8f8f8; } #typora-quick-open-item { background-color: #FAFAFA; border-color: #FEFEFE #e5e5e5 #e5e5e5 #eee; border-style: solid; border-width: 1px; } #md-notification:before { top: 10px; } header, .context-menu, .megamenu-content, footer { font-family: var(--font-sans-serif); } .file-node-content:hover .file-node-icon, .file-node-content:hover .file-node-open-state { visibility: visible; } .md-lang { color: #b4654d; } .html-for-mac .context-menu { --item-hover-bg-color: #E6F0FE; } /* 代码框 */ /* CodeMirror 3024 Day theme */ /* 代码段 背景 */ pre { --select-text-bg-color: #e7eded !important; } /* 边框 */ .md-fences { border: 1px solid #e7eded; border-radius: 4px; } .cm-s-inner { padding: .25rem; border-radius: .25rem; } .cm-s-inner.CodeMirror, .cm-s-inner .CodeMirror-gutters { background-color: #f8f8f8 !important; color: #3a3432 !important; border: none; } .cm-s-inner .CodeMirror-gutters { color: #6d8a88; } .cm-s-inner .CodeMirror-cursor { border-left: solid thin #5c5855 !important; } .cm-s-inner .CodeMirror-linenumber { color: #807d7c; } .cm-s-inner .CodeMirror-line::selection, .cm-s-inner .CodeMirror-line::-moz-selection, .cm-s-inner .CodeMirror-line > span::selection, .cm-s-inner .CodeMirror-line > span::-moz-selection, .cm-s-inner .CodeMirror-line > span > span::selection, .cm-s-inner .CodeMirror-line > span > span::-moz-selection { background: var(--purple-light-2); } .cm-s-inner span.cm-comment { color: #cdab53; } .cm-s-inner span.cm-string, .cm-s-inner span.cm-string-2 { color: #f2b01d; } .cm-s-inner span.cm-number { color: #a34e8f; } .cm-s-inner span.cm-variable { color: #01a252; } .cm-s-inner span.cm-variable-2 { color: #01a0e4; } .cm-s-inner span.cm-def { /* color: #e8bbd0; */ color: #e2287f; } .cm-s-inner span.cm-operator { color: #ff79c6; } .cm-s-inner span.cm-keyword { color: #db2d20; } .cm-s-inner span.cm-atom { color: #a34e8f; } .cm-s-inner span.cm-meta { color: inherit; } .cm-s-inner span.cm-tag { color: #db2d20; } .cm-s-inner span.cm-attribute { color: #01a252; } .cm-s-inner span.cm-qualifier { color: #388aa3; } .cm-s-inner span.cm-property { color: #01a252; } .cm-s-inner span.cm-builtin { color: #388aa3; } .cm-s-inner span.cm-variable-3, .cm-s-inner span.cm-type { color: #ffb86c; } .cm-s-inner span.cm-bracket { color: #3a3432; } .cm-s-inner span.cm-link { color: #a34e8f; } .cm-s-inner span.cm-error { background: #db2d20; color: #5c5855; } /* .md-fences.md-focus .cm-s-inner .CodeMirror-activeline-background { background: var(--purple-light-2); } */ .cm-s-inner .CodeMirror-matchingbracket { text-decoration: underline; color: #a34e8f !important; } #fences-auto-suggest .active { background: #ddd; } #write .code-tooltip { bottom: initial; top: calc(100% - 1px); background: #f7f7f7; border: 1px solid #ddd; border-top: 0; } .auto-suggest-container { border-color: #b4b4b4; } .auto-suggest-container .autoComplt-hint.active { background: #b4b4b4; color: inherit; } /* task list */ #write .md-task-list-item > input { -webkit-appearance: initial; display: block; position: absolute; border: 1px solid #b4b4b4; border-radius: .25rem; margin-top: .1rem; margin-left: -1.8rem; height: 1.2rem; width: 1.2rem; transition: background 0.3s; } #write .md-task-list-item > input:focus { outline: none; box-shadow: none; } #write .md-task-list-item > input:hover { background: #ddd; } #write .md-task-list-item > input[checked]::before { content: ''; position: absolute; top: 20%; left: 50%; height: 60%; width: 2px; transform: rotate(40deg); background: #333; } #write .md-task-list-item > input[checked]::after { content: ''; position: absolute; top: 46%; left: 25%; height: 30%; width: 2px; transform: rotate(-40deg); background: #333; } #write .md-task-list-item > p { transition: color 0.3s, opacity 0.3s; } #write .md-task-list-item.task-list-done > p { color: #b4b4b4; text-decoration: line-through; } #write .md-task-list-item.task-list-done > p > .md-emoji { opacity: .5; } #write .md-task-list-item.task-list-done > p > .md-link > a { opacity: .6; } /* sidebar and outline */ .pin-outline .outline-active { color: var(--active-file-text-color); } .file-list-item { border-bottom: 1px solid; border-color: var(--purple-light-5); } .file-list-item-summary { font-weight: 400; } .file-list-item.active { color: var(--active-file-text-color); background-color: var(--purple-light-5); } .file-tree-node.active>.file-node-background { background-color: var(--purple-light-5); font-weight: 700; } .file-tree-node.active>.file-node-content { color: var(--active-file-text-color); font-weight: 700; } .file-node-content { color: #5e676d; } .sidebar-tabs { border-bottom: none; } .sidebar-tab.active { font-weight: 400; } .sidebar-content-content { font-size: 0.9rem; }","categories":[],"tags":[]},{"title":"深度学习之路3:Pandas使用总结","slug":"pandas使用总结","date":"2020-09-14T07:35:37.794Z","updated":"2020-09-14T07:35:37.794Z","comments":true,"path":"pandas使用总结.html","link":"","permalink":"http://lansus.coding.me/pandas使用总结.html","excerpt":"","text":"什么是PandasPandas是一个在Python中提供更好的数据结构和很多数据分析工具类的集合库，其有点包括： 一个快速、高效的DataFrame对象，用于数据操作和综合索引； 用于在内存数据结构和不同格式之间读写数据的工具：CSV和文本文件、MicrosoftExcel、SQL数据库和快速HDF 5格式；-智能数据对齐和丢失数据的综合处理：在计算中获得基于标签的自动对齐，并轻松地将凌乱的数据操作为有序的形式； 数据集的灵活调整和旋转； 基于智能标签的切片、花哨的索引和大型数据集的子集； 可以从数据结构中插入和删除列，以实现大小可变； 通过引擎与强大的组聚合或转换数据，允许对数据集进行拆分-应用-组合操作； 数据集的高性能合并和连接； 层次轴索引提供了在低维数据结构中处理高维数据的直观方法； 时间序列功能：-日期范围生成和频率转换、移动窗口统计、移动窗口线性回归、日期转换和滞后。甚至在不丢失数据的情况下创建特定领域的时间偏移和加入时间序列； 对性能进行了高度优化，用Cython或C编写了关键代码路径。 Python与Pandas在广泛的学术和商业领域中使用，包括金融，神经科学，经济学，统计学，广告，网络分析，等等 -- [Pandas中文文档](https://www.pypandas.cn/intro/home.html) Pandas Series怎么创建Series是Pandas中的一维数据结构，类似于Python中的列表和Numpy中的Ndarray，不同之处在于：Series是一维的，能存储不同类型的数据，有一组索引与元素对应。 123456import pandas as pdimport numpy as npimport matplotlib.pyplot as plt%matplotlib inlines1=pd.Series([1,3,4,5,6,np.nan,345])s1 也可以自己自定下标 1s2=pd.Series([1,2,3,4,5],[&apos;a&apos;,&apos;b&apos;,&apos;c&apos;,&apos;d&apos;]) 这样大数据结构好处是可以通过下标来选取数据： 12s2[&apos;a&apos;] #等价下面s2.iloc[0] 常用方法下面是常用的一些方法具体使用方法可以看附录里的代码输出）: 函数名 说明 举例 备注 Series(array，index=array) 初始化一个Panda数列 s1=pd.Series([1,3,4,5,6,np.nan,345]) 可以自定义下标 index是自定义的下标集合 iloc[position] 通过位数获取值 s1.ilo size 元素的个数 s1.size head(num) 输出从头开始的第几个 s1.head(2) describe() 返回对数列的描述 s1.describe() 描述包括最大值、最小值方差、平均值等 sort_values(ascending,na_position) 排序 s1.sort_values(ascending=False,na_position =”first”) False倒序，first 是NAN数据放最上面 plot 直出图形 s2.plot.bar() bar 柱状图，pie 饼状图 area 折线区域图 density 曲线图 to_dict() 将数列转换成一个python的字典类型 sdic=s1.to_dict() drop_duplicates() 去掉数列里重复的值 s1.drop_duplicates() Pandas DataFrame如何创建我们可以直接使用DataFrame来创建1s3=pd.DataFrame(&#123;&quot;studens_1&quot;:[67,45,89,98,99],&quot;studens_2&quot;:[67,75,79,98,100]&#125;,index=[&quot;语文&quot;,&quot;数学&quot;,&quot;英语&quot;,&quot;体育&quot;,&quot;政治&quot;]) 相比较于Series,DataFramed除了index,values,还多了一个Colums并且上面的series方法DataFram适用。 assign操作以及lambda对DataFrame内的数据进行操作，可以通过assgin12s3.assign(studens_1= lambda x:x[&apos;studens_1&apos;]*2,studens_2=lambda x:x[&apos;studens_2&apos;]+2) 附录1234567import pandas as pdimport numpy as npimport seaborn as snsimport matplotlib.pyplot as plt%matplotlib inlines1=pd.Series([1,3,4,5,6,np.nan,345])s1 0 1.0 1 3.0 2 4.0 3 5.0 4 6.0 5 NaN 6 345.0 dtype: float64 12s2=pd.Series([1,2,8,4],['a','b','c','d'])s2 a 1 b 2 c 8 d 4 dtype: int64 1s1[3] 5.0 1s2[0] 1 1s1.size 7 1s2.head(2) a 1 b 2 dtype: int64 1np.round(s2.describe(),2) count 4.0 mean 2.0 std 1.0 min 1.0 25% 2.0 50% 2.0 75% 3.0 max 4.0 dtype: float64 1s1.sort_values(ascending=False,na_position =\"first\") 5 NaN 6 345.0 4 6.0 3 5.0 2 4.0 1 3.0 0 1.0 dtype: float64 1s2.plot.pie() &lt;matplotlib.axes._subplots.AxesSubplot at 0x26cee511f98&gt; 1s2.to_dict() {&apos;a&apos;: 1, &apos;b&apos;: 2, &apos;c&apos;: 8, &apos;d&apos;: 4} 1s1.drop_duplicates() 0 1.0 1 3.0 2 4.0 3 5.0 4 6.0 5 NaN 6 345.0 dtype: float64 12s3=pd.DataFrame(&#123;\"studens_1\":[67,45,89,98,99],\"studens_2\":[67,75,79,98,100]&#125;,index=[\"语文\",\"数学\",\"英语\",\"体育\",\"政治\"])s3 .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } studens_1 studens_2 语文 67 67 数学 45 75 英语 89 79 体育 98 98 政治 99 100 1s3.iloc[0].iloc[1] 67 1s3.assign(studens_1= lambda x:x['studens_1']*2,studens_2=lambda x:x['studens_2']+2) .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } studens_1 studens_2 语文 134 69 数学 90 77 英语 178 81 体育 196 100 政治 198 102 12data=pd.read_csv(\"train.csv\")data .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } PassengerId Survived Pclass Name Sex Age SibSp Parch Ticket Fare Cabin Embarked 0 1 0 3 Braund, Mr. Owen Harris male 22.0 1 0 A/5 21171 7.2500 NaN S 1 2 1 1 Cumings, Mrs. John Bradley (Florence Briggs Th… female 38.0 1 0 PC 17599 71.2833 C85 C 2 3 1 3 Heikkinen, Miss. Laina female 26.0 0 0 STON/O2. 3101282 7.9250 NaN S 3 4 1 1 Futrelle, Mrs. Jacques Heath (Lily May Peel) female 35.0 1 0 113803 53.1000 C123 S 4 5 0 3 Allen, Mr. William Henry male 35.0 0 0 373450 8.0500 NaN S 5 6 0 3 Moran, Mr. James male NaN 0 0 330877 8.4583 NaN Q 6 7 0 1 McCarthy, Mr. Timothy J male 54.0 0 0 17463 51.8625 E46 S 7 8 0 3 Palsson, Master. Gosta Leonard male 2.0 3 1 349909 21.0750 NaN S 8 9 1 3 Johnson, Mrs. Oscar W (Elisabeth Vilhelmina Berg) female 27.0 0 2 347742 11.1333 NaN S 9 10 1 2 Nasser, Mrs. Nicholas (Adele Achem) female 14.0 1 0 237736 30.0708 NaN C 10 11 1 3 Sandstrom, Miss. Marguerite Rut female 4.0 1 1 PP 9549 16.7000 G6 S 11 12 1 1 Bonnell, Miss. Elizabeth female 58.0 0 0 113783 26.5500 C103 S 12 13 0 3 Saundercock, Mr. William Henry male 20.0 0 0 A/5. 2151 8.0500 NaN S 13 14 0 3 Andersson, Mr. Anders Johan male 39.0 1 5 347082 31.2750 NaN S 14 15 0 3 Vestrom, Miss. Hulda Amanda Adolfina female 14.0 0 0 350406 7.8542 NaN S 15 16 1 2 Hewlett, Mrs. (Mary D Kingcome) female 55.0 0 0 248706 16.0000 NaN S 16 17 0 3 Rice, Master. Eugene male 2.0 4 1 382652 29.1250 NaN Q 17 18 1 2 Williams, Mr. Charles Eugene male NaN 0 0 244373 13.0000 NaN S 18 19 0 3 Vander Planke, Mrs. Julius (Emelia Maria Vande… female 31.0 1 0 345763 18.0000 NaN S 19 20 1 3 Masselmani, Mrs. Fatima female NaN 0 0 2649 7.2250 NaN C 20 21 0 2 Fynney, Mr. Joseph J male 35.0 0 0 239865 26.0000 NaN S 21 22 1 2 Beesley, Mr. Lawrence male 34.0 0 0 248698 13.0000 D56 S 22 23 1 3 McGowan, Miss. Anna “Annie” female 15.0 0 0 330923 8.0292 NaN Q 23 24 1 1 Sloper, Mr. William Thompson male 28.0 0 0 113788 35.5000 A6 S 24 25 0 3 Palsson, Miss. Torborg Danira female 8.0 3 1 349909 21.0750 NaN S 25 26 1 3 Asplund, Mrs. Carl Oscar (Selma Augusta Emilia… female 38.0 1 5 347077 31.3875 NaN S 26 27 0 3 Emir, Mr. Farred Chehab male NaN 0 0 2631 7.2250 NaN C 27 28 0 1 Fortune, Mr. Charles Alexander male 19.0 3 2 19950 263.0000 C23 C25 C27 S 28 29 1 3 O’Dwyer, Miss. Ellen “Nellie” female NaN 0 0 330959 7.8792 NaN Q 29 30 0 3 Todoroff, Mr. Lalio male NaN 0 0 349216 7.8958 NaN S … … … … … … … … … … … … … 861 862 0 2 Giles, Mr. Frederick Edward male 21.0 1 0 28134 11.5000 NaN S 862 863 1 1 Swift, Mrs. Frederick Joel (Margaret Welles Ba… female 48.0 0 0 17466 25.9292 D17 S 863 864 0 3 Sage, Miss. Dorothy Edith “Dolly” female NaN 8 2 CA. 2343 69.5500 NaN S 864 865 0 2 Gill, Mr. John William male 24.0 0 0 233866 13.0000 NaN S 865 866 1 2 Bystrom, Mrs. (Karolina) female 42.0 0 0 236852 13.0000 NaN S 866 867 1 2 Duran y More, Miss. Asuncion female 27.0 1 0 SC/PARIS 2149 13.8583 NaN C 867 868 0 1 Roebling, Mr. Washington Augustus II male 31.0 0 0 PC 17590 50.4958 A24 S 868 869 0 3 van Melkebeke, Mr. Philemon male NaN 0 0 345777 9.5000 NaN S 869 870 1 3 Johnson, Master. Harold Theodor male 4.0 1 1 347742 11.1333 NaN S 870 871 0 3 Balkic, Mr. Cerin male 26.0 0 0 349248 7.8958 NaN S 871 872 1 1 Beckwith, Mrs. Richard Leonard (Sallie Monypeny) female 47.0 1 1 11751 52.5542 D35 S 872 873 0 1 Carlsson, Mr. Frans Olof male 33.0 0 0 695 5.0000 B51 B53 B55 S 873 874 0 3 Vander Cruyssen, Mr. Victor male 47.0 0 0 345765 9.0000 NaN S 874 875 1 2 Abelson, Mrs. Samuel (Hannah Wizosky) female 28.0 1 0 P/PP 3381 24.0000 NaN C 875 876 1 3 Najib, Miss. Adele Kiamie “Jane” female 15.0 0 0 2667 7.2250 NaN C 876 877 0 3 Gustafsson, Mr. Alfred Ossian male 20.0 0 0 7534 9.8458 NaN S 877 878 0 3 Petroff, Mr. Nedelio male 19.0 0 0 349212 7.8958 NaN S 878 879 0 3 Laleff, Mr. Kristo male NaN 0 0 349217 7.8958 NaN S 879 880 1 1 Potter, Mrs. Thomas Jr (Lily Alexenia Wilson) female 56.0 0 1 11767 83.1583 C50 C 880 881 1 2 Shelley, Mrs. William (Imanita Parrish Hall) female 25.0 0 1 230433 26.0000 NaN S 881 882 0 3 Markun, Mr. Johann male 33.0 0 0 349257 7.8958 NaN S 882 883 0 3 Dahlberg, Miss. Gerda Ulrika female 22.0 0 0 7552 10.5167 NaN S 883 884 0 2 Banfield, Mr. Frederick James male 28.0 0 0 C.A./SOTON 34068 10.5000 NaN S 884 885 0 3 Sutehall, Mr. Henry Jr male 25.0 0 0 SOTON/OQ 392076 7.0500 NaN S 885 886 0 3 Rice, Mrs. William (Margaret Norton) female 39.0 0 5 382652 29.1250 NaN Q 886 887 0 2 Montvila, Rev. Juozas male 27.0 0 0 211536 13.0000 NaN S 887 888 1 1 Graham, Miss. Margaret Edith female 19.0 0 0 112053 30.0000 B42 S 888 889 0 3 Johnston, Miss. Catherine Helen “Carrie” female NaN 1 2 W./C. 6607 23.4500 NaN S 889 890 1 1 Behr, Mr. Karl Howell male 26.0 0 0 111369 30.0000 C148 C 890 891 0 3 Dooley, Mr. Patrick male 32.0 0 0 370376 7.7500 NaN Q 891 rows × 12 columns 12345#整理数据，删除空数据data=data.drop('Cabin',axis=1)data['Age']=data['Age'].fillna(20)data['Embarked']=data['Embarked'].notnull()data.isnull().sum() PassengerId 0 Survived 0 Pclass 0 Name 0 Sex 0 Age 0 SibSp 0 Parch 0 Ticket 0 Fare 0 Embarked 0 dtype: int64 1data.loc[2:5,[\"Age\"]] .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } Age 2 26.0 3 35.0 4 35.0 5 20.0 1data.loc[data[\"Survived\"]==1] File &quot;&lt;ipython-input-108-e75dc7c72bde&gt;&quot;, line 1 data.?loc[data[&quot;Survived&quot;]==1] ^ SyntaxError: invalid syntax 1data['Survived'].corr(data[\"Pclass\"]) -0.33848103596101475 1pd.DataFrame([1,2,3,4],index=pd.date_range(\"20190206\",periods=4)) .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } 0 2019-02-06 1 2019-02-07 2 2019-02-08 3 2019-02-09 4 12","categories":[{"name":"Technology","slug":"Technology","permalink":"http://lansus.coding.me/categories/Technology/"}],"tags":[{"name":"python","slug":"python","permalink":"http://lansus.coding.me/tags/python/"},{"name":"pandas","slug":"pandas","permalink":"http://lansus.coding.me/tags/pandas/"},{"name":"人工智能","slug":"人工智能","permalink":"http://lansus.coding.me/tags/人工智能/"}]},{"title":"MATLAB学习小结2-图标操作","slug":"MATLAB学习小结2","date":"2019-10-22T05:51:21.000Z","updated":"2020-09-14T07:35:37.793Z","comments":true,"path":"MATLAB学习小结2.html","link":"","permalink":"http://lansus.coding.me/MATLAB学习小结2.html","excerpt":"","text":"这一部分主要介绍MATLAB的plot图标操作。 基础操作我们可以使用1doc plot 来查看MATLAB的任意方法的使用说明文档。 新建一个折线图： 123x=0:2:20y=0:4:40plot(x,y，‘-or’) 图形属性第三个参数是用来自哪个图表的属性： Value Mean - 实线（默认） – 虚线 -. 点划线 : 点线 ‘+’ 加号 ‘o’ 圆圈 ‘*’ 星号 ‘.’ 点 ‘x’ 叉号 ‘square’ 或 ‘s’ 方形 ‘diamond’ 或 ‘d’ 菱形 ‘^’ 上三角 ‘v’ 下三角 ‘&gt;’ 右三角 ‘&lt;’ 左三角 ‘pentagram’ 或 ‘p’ 五角星（五角形） ‘hexagram’ 或 ‘h’ 六角星（六角形） r 红色 g 绿色 b 蓝色 c 青蓝色 m 品红色 y 黄色 k 黑色 w 白色 我们如果想在上一个所画图上添加第二个折线图，就可以使用hold函数：123hold onplot(x/2,y)hold off 线条属性 p.Color（可以使用英语缩写名称、十六进制和RGB三元组）123p = plot(1:10);c = p.Color;p.Color = &apos;red&apos;; LineWidth123p = plot(1:10);c = p.LineWidth;c = 5; LineJoin 线条边角的样式 ‘round’ （默认） 圆角 | ‘miter’ 尖角 | ‘chamfer’ 钝角 剩余的属性可以见网页line属性 x.y轴 label标题设置方法是title1234title(&apos;Sample Densities&apos;) ylabel(&apos;Density(g/cm^3)&apos;) xlabel(&apos;x&apos;)","categories":[{"name":"机器学习","slug":"机器学习","permalink":"http://lansus.coding.me/categories/机器学习/"}],"tags":[{"name":"MATLAB","slug":"MATLAB","permalink":"http://lansus.coding.me/tags/MATLAB/"}]},{"title":"MATLAB学习小结1","slug":"MATLAB学习小结1","date":"2019-10-21T03:16:35.000Z","updated":"2020-09-14T07:35:37.793Z","comments":true,"path":"MATLAB学习小结1.html","link":"","permalink":"http://lansus.coding.me/MATLAB学习小结1.html","excerpt":"","text":"在看机器学习的课程的时候发现，课程作业都是需要用MATLAB语言来完成的，所以决定来系统学习以下MATLAB，安排时间在10h左右。 MATLAB语言简介MATLAB是美国MathWorks公司出品的商业数学软件，用于算法开发、数据可视化、数据分析以及数值计算的高级技术计算语言和交互式环境，主要包括MATLAB和Simulink两大部分。它将数值分析、矩阵计算、科学数据可视化以及非线性动态系统的建模和仿真等诸多强大功能集成在一个易于使用的视窗环境中，为科学研究、工程设计以及必须进行有效数值计算的众多科学领域提供了一种全面的解决方案，并在很大程度上摆脱了传统非交互式程序设计语言（如C、Fortran）的编辑模式，代表了当今国际科学计算软件的先进水平。 MATLAB基础学习语言基础输入命令 字符 描述 示例 ans 最近记录的为给定义的结果 - clc 清空命令行窗口 &gt;clc diary 窗口日志操作，开启关闭和日志命名 diary off format 格式化控制台参数格式输出 format float home 发送光标复位 home iskeyword 判断是否为程序关键字 iskeyword(‘try’) more 控制分页显示 more on 矩阵和数组矩阵和数组是MATLAB中信息和数据的基本表示形式。您可以创建常用的数组和网格、合并现有数组、操作数组的形状和内容，以及使用索引访问数组元素。 创建和合并数组 方法名 描述 示例 zeros 构建全0矩阵 zeros(2,2) ones 构全部为1的矩阵 ones(2,2) rand 构建随机(0，1)范围的矩阵 rand(5) eye 单位矩阵 eye(3) diag 创建对角矩阵 或者元素 diag(3) blkdiag 分块对角矩阵 或者元素 A1 = ones(2,2);A2 = 2ones(3,2);A3 = 3ones(2,3);B = blkdiag(A1,A2,A3) cat 串联矩阵 A1 = ones(2,2);A2 = 2ones(3,2);A3 = 3ones(2,3);B = cat(A1,A2,A3) horzcat 横向串联 - vertcat 纵向串联 - repelem 重复元素副本 repelem(1,2,3,4) repmat 重复元素副本 repmat(1,2,3,4) 创建网格 方法名 描述 示例 linspace 生成线性间距向量，默认是100 linspace(0,1,3) logspace 生成对数间距向量 logspace(0,1,3) freqspace 生成频率间距向量 freqspace(0,1,3) meshgrid 根据向量返回一个二维和三维网格 [X,Y]=meshgrid(x,y) ndgrid N维空间矩形表格 [X,Y]=(1,3) 确定大小、形状和排序 方法名 描述 length 最大数组维度的长度 size 数组大小 ndims 数组维度数目 numel 数组元素的数目 isscalar 确定输入是否为标量 issorted 确定数组是否已排序 issortedrows 确定矩阵或表的行是否已排序 isvector 确定输入是否为向量 ismatrix 确定输入是否为矩阵 isrow 确定输入是否为行向量 iscolumn 确定输入是否为列向量 isempty 确定数组是否为空","categories":[{"name":"机器学习","slug":"机器学习","permalink":"http://lansus.coding.me/categories/机器学习/"}],"tags":[{"name":"MATLAB","slug":"MATLAB","permalink":"http://lansus.coding.me/tags/MATLAB/"}]},{"title":"监督学习和非监督学习","slug":"监督学习和非监督学习","date":"2019-10-16T12:38:42.000Z","updated":"2020-09-14T07:35:37.796Z","comments":true,"path":"监督学习和非监督学习.html","link":"","permalink":"http://lansus.coding.me/监督学习和非监督学习.html","excerpt":"","text":"机器学习定义机器学习的定义是： A computer program is said to learn from experience E with respect to some class of tasks T and performance measure P, if its performance at tasks in T, as measured by P, improves with experience E 翻译过来是，一个计算机程序从经验E中学习某些类型的任务T和性能度量P，如果它在任务T中的性能(以P度量)随着经验E的提高而提高。按照定义举例如下： i.e. 下象棋 E：下了很多次象棋所得到的经验 T：下象棋的任务次数 P：下一次下象棋赢的概率 基本上，任何关于机器学习的问题都可以分为两种类型：监督学习和非监督学习。 机器学习的分类监督学习Supervised Learnning ,中文解释监督学习。在监督学习里，我们会得到一些数据集，并且已经知道正确的输出结果。监督学习分为回归问题和分类问题。在一个回归问题里，我们试图在连续输出中预测结果，这意味着我们试图将输入变量映射到某个连续函数。在一个分类问题中，我们试图将输入变量映射到离散的类别中。 根据房地产市场上房屋大小的数据，试着预测它们的价格。价格作为规模的函数是一个连续的输出，所以这是一个回归问题 对于一个有肿瘤的病人，我们必须预测肿瘤是恶性的还是良性的 非监督学习Unsupervised Learnning.非监督学习，无监督学习允许我们在处理问题时几乎不知道结果应该是什么样子，我们可以从数据中推导出结构我们不一定知道变量的影响。我们可以根据数据中变量之间的关系对数据进行聚类，从而得到这种结构。在无监督学习中，没有基于预测结果的反馈。 收集1,000,000个不同的基因，并找到一种方法自动将这些基因分组，这些基因通过不同的变量(如寿命、位置、角色等)以某种方式相似或相关 一般非监督应用在集群问题里比较多。","categories":[{"name":"机器学习","slug":"机器学习","permalink":"http://lansus.coding.me/categories/机器学习/"}],"tags":[{"name":"机器学习","slug":"机器学习","permalink":"http://lansus.coding.me/tags/机器学习/"}]},{"title":"tensorflow框架初探（1）","slug":"tensorflow框架初探一","date":"2019-07-25T07:17:59.000Z","updated":"2020-09-14T07:35:37.795Z","comments":true,"path":"tensorflow框架初探一.html","link":"","permalink":"http://lansus.coding.me/tensorflow框架初探一.html","excerpt":"","text":"Tensrflow 简介TensorFlow是一个基于数据流编程（dataflow programming）的符号数学系统，被广泛应用于各类机器学习（machine learning）算法的编程实现，其前身是谷歌的神经网络算法库DistBelief。Tensorflow拥有多层级结构，可部署于各类服务器、PC终端和网页并支持GPU和TPU高性能数值计算，被广泛应用于谷歌内部的产品开发和各领域的科学研究 [1-2] 。TensorFlow由谷歌人工智能团队谷歌大脑（Google Brain）开发和维护，拥有包括TensorFlow Hub、TensorFlow Lite、TensorFlow Research Cloud在内的多个项目以及各类应用程序接口（Application Programming Interface, API) 。自2015年11月9日起，TensorFlow依据阿帕奇授权协议（Apache 2.0 open source license）开放源代码 。TensorFlow 是一个用于研究和生产的开源机器学习库。TensorFlow 提供了各种 API，可供初学者和专家在桌面、移动、网络和云端环境下进行开发。 TensorFlow 基本使用使用 TensorFlow, 你必须明白 TensorFlow: 使用图 (graph) 来表示计算任务. 在被称之为 会话 (Session) 的上下文 (context) 中执行图. 使用 tensor 表示数据.‘ 通过 变量 (Variable) 维护状态. 使用 feed 和 fetch 可以为任意的操作(arbitrary operation) 赋值或者从其中获取数据. TensorFlow 是一个编程系统, 使用图来表示计算任务. 图中的节点被称之为 op (operation 的缩写). 一个 op 获得 0 个或多个 Tensor, 执行计算, 产生 0 个或多个 Tensor. 每个 Tensor 是一个类型化的多维数组. 例如, 你可以将一小组图像集表示为一个四维浮点数数组, 这四个维度分别是 [batch, height, width, channels]. 一个 TensorFlow 图描述了计算的过程. 为了进行计算, 图必须在 会话 里被启动. 会话 将图的 op 分发到诸如 CPU 或 GPU 之类的 设备 上, 同时提供执行 op 的方法. 这些方法执行后, 将产生的 tensor 返回. 在 Python 语言中, 返回的 tensor 是 numpy ndarray 对象; 在 C 和 C++ 语言中, 返回的 tensor 是 tensorflow::Tensor 实例. 计算图TensorFlow 程序通常被组织成一个构建阶段和一个执行阶段. 在构建阶段, op 的执行步骤 被描述成一个图. 在执行阶段, 使用会话执行执行图中的 op. 例如, 通常在构建阶段创建一个图来表示和训练神经网络, 然后在执行阶段反复执行图中的训练 op. TensorFlow 支持 C, C++, Python 编程语言. 目前, TensorFlow 的 Python 库更加易用, 它提供了大量的辅助函数来简化构建图的工作, 这些函数尚未被 C 和 C++ 库支持. 三种语言的会话库 (session libraries) 是一致的.简单而言，开始的这一步骤，是使用Tensorflow创建模型阶段，首先需要有模型，才能在后面通过数据开训练模型。 ###构建图1234567891011121314import tensorflow as tf# 创建一个常量 op, 产生一个 1x2 矩阵. 这个 op 被作为一个节点# 加到默认图中.## 构造器的返回值代表该常量 op 的返回值.matrix1 = tf.constant([[3., 3.]])# 创建另外一个常量 op, 产生一个 2x1 矩阵.matrix2 = tf.constant([[2.],[2.]])# 创建一个矩阵乘法 matmul op , 把 &apos;matrix1&apos; 和 &apos;matrix2&apos; 作为输入.# 返回值 &apos;product&apos; 代表矩阵乘法的结果.product = tf.matmul(matrix1, matrix2) 上面例子，就是简单的构建图，通过两个op来相乘得到第三个op。 启动图（执行阶段）构建完成以后，就需要通过会话（Session）来启动图。123456789101112131415161718# 启动默认图.sess = tf.Session()# 调用 sess 的 &apos;run()&apos; 方法来执行矩阵乘法 op, 传入 &apos;product&apos; 作为该方法的参数. # 上面提到, &apos;product&apos; 代表了矩阵乘法 op 的输出, 传入它是向方法表明, 我们希望取回# 矩阵乘法 op 的输出.## 整个执行过程是自动化的, 会话负责传递 op 所需的全部输入. op 通常是并发执行的.# # 函数调用 &apos;run(product)&apos; 触发了图中三个 op (两个常量 op 和一个矩阵乘法 op) 的执行.## 返回值 &apos;result&apos; 是一个 numpy `ndarray` 对象.result = sess.run(product)print result# ==&gt; [[ 12.]]# 任务完成, 关闭会话.sess.close()","categories":[{"name":"Technology","slug":"Technology","permalink":"http://lansus.coding.me/categories/Technology/"}],"tags":[{"name":"deeplearning","slug":"deeplearning","permalink":"http://lansus.coding.me/tags/deeplearning/"}]},{"title":"感悟摘抄一","slug":"感悟摘抄一","date":"2019-07-24T01:54:56.000Z","updated":"2020-09-14T07:35:37.795Z","comments":true,"path":"感悟摘抄一.html","link":"","permalink":"http://lansus.coding.me/感悟摘抄一.html","excerpt":"","text":"","categories":[],"tags":[]},{"title":"深度学习之路（四）matplotlib使用","slug":"深度学习之路4_matplotlib使用","date":"2019-05-24T10:37:50.000Z","updated":"2020-09-16T03:39:59.374Z","comments":true,"path":"深度学习之路4_matplotlib使用.html","link":"","permalink":"http://lansus.coding.me/深度学习之路4_matplotlib使用.html","excerpt":"","text":"matplotlib 介绍matplotlob,是python里辅助制作图表的代码库，属于做机器学习的基础几个库之一。Matplotlib是一个Python 2D绘图库，可以生成各种硬拷贝格式和跨平台的交互式环境的出版物质量数据。Matplotlib可用于Python脚本，Python和IPython shell，Jupyter笔记本，Web应用程序服务器和四个图形用户界面工具包。 Matplotlib试图让简单的事情变得简单而艰难。您只需几行代码即可生成绘图，直方图，功率谱，条形图，错误图，散点图等。有关示例，请参阅 示例图和缩略图库。 对于简单的绘图，pyplot模块提供了类似MATLAB的接口，特别是与IPython结合使用时。对于高级用户，您可以通过面向对象的界面或MATLAB用户熟悉的一组函数完全控制线型，字体属性，轴属性等 Matpotlib的基本使用这是一张使用plot患处的2D的属性分布示意图，用来说明图表的常用属性以及显示的位置 初级图形绘制我们可以根据数据简单的绘制 12345678910111213import matplotlibimport matplotlib.pyplot as pltimport numpy as npimport pandas as pdfrom IPython.display import *%matplotlib inlinex=np.arange(1.11)y=2*x+5plt.title(&quot;Matylotlib demo&quot;)plt.xlabel(&quot;x&quot;)plt.ylabel(&quot;y&quot;)plt.plot(x,y)plt.show() 它默认是不显示中文的，如果我们要先显示中文，我们可以先下载SimHei.ttf字体，然后进行操作：12zhfont1=matplotlib.font_manager.FontProperties(fname=&quot;SimHei.ttf&quot;)plt.xlabel(&quot;x轴&quot;,fontproperties=zhfont1) 或者直接可以用本机上的字体，确认找到本机上适合中文字体，然后操作：1plt.rcParams[&apos;font.family&apos;]=[&apos;STFangsong&apos;] 自定义格式以及颜色缩写如果我们要显示虚线图，1234567x=np.arange(1.11)y=2*x+5plt.title(&quot;Matylotlib demo&quot;)plt.xlabel(&quot;x&quot;)plt.ylabel(&quot;y&quot;)plt.plot(x,y,&quot;--r&quot;) #显示虚线红色plt.show() 作为线性图的替代，可以通过向 plot() 函数添加格式字符串来显示离散值。 可以使用以下格式化字符 字符 描述 - 实线样式（默认样式） – 短横线 -. 点划线 : 虚线 . 点标记 , 像素标记 o 圆标记 * 星形标记 以下是matplotlib用到的颜色的缩写 字符 颜色 ‘b’ 蓝色 ‘g’ 绿色 ‘r’ 红色 ‘c’ 青色 ‘m’ 品红色 ‘y’ 黄色 ‘k’ 黑色 ‘w’ 白色 绘制多个内容subplot()能够在同个图中绘制多个内容123456789101112131415161718import numpy as np import matplotlib.pyplot as plt # 计算正弦和余弦曲线上的点的 x 和 y 坐标 x = np.arange(0, 3 * np.pi, 0.1) y_sin = np.sin(x) y_cos = np.cos(x) # 建立 subplot 网格，高为 2，宽为 1 # 激活第一个 subplotplt.subplot(2, 1, 1) # 绘制第一个图像 plt.plot(x, y_sin) plt.title(&apos;Sine&apos;) # 将第二个 subplot 激活，并绘制第二个图像plt.subplot(2, 1, 2) plt.plot(x, y_cos) plt.title(&apos;Cosine&apos;) # 展示图像plt.show() 几种常见图表的操作Histogram(柱状图)1plt.hist(x, bins= 10, range= None, normed= False, weights= None, cumulative= False, bottom= None, histtype= &apos;bar&apos;, align= &apos;mid&apos;, orientation= &apos;vertical&apos;, rwidth= None, log= False, color= None, label= None, stacked= False) 属性名 描述 x 指定绘制直方图的数据 bins 条形条数 rangge x轴数据范围 normed 是否将直方图频数换成频率 weights 参数可为每一个数据点设置权重 cumulative 是否需要计算累计频数或频率 bottom 添加基准线，默认是0 orientation 设置垂直水平方式 rwidth 条形宽度百分比 color 填充色 1234567data=pd.DataFrame([90,70,45,58,68,72],index=[&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;,&quot;e&quot;,&quot;f&quot;])plt.hist(data[0],facecolor=&apos;r&apos;,histtype=&quot;bar&quot;)plt.rcParams[&apos;font.family&apos;]=[&apos;SimHei.ttf&apos;]plt.xlabel(&quot;学生&quot;)plt.ylabel(&quot;成绩&quot;)plt.show() Scatter Plot（散点图）123456789101112131415161718plt.scatter( x, y, s=None, c=None, marker=None, cmap=None, norm=None, vmin=None, vmax=None, alpha=None, linewidths=None, verts=None, edgecolors=None, *, data=None, **kwargs,) 下面是主要属性 属性名 描述 x 散点图dx轴数据 y 散点图y轴数据 s 区域面积的大小 colors 散点图填充颜色 marker 显示标记，自定义散点的形状，例如marker=’,’散点会变成正方形，具体看参照[这里]https://matplotlib.org/api/markers_api.html?highlight=matplotlib%20markers#module-matplotlib.markers) cmap 颜色地图 norm 是否转换成频率，只有当c是floa类型才可以使用 vmax,vmin 与norm配套使用，调整数据亮度 alpha 透明度 linewidths 调整散点边缘线宽度 edgecolors 边缘颜色设置 使用代码如下: 123456size=50x=np.random.rand(size)y=np.random.rand(size)area=np.pi*(135*x**2)colors=np.random.rand(size)plt.scatter(x,y,s=area,c=colors,alpha=0.5,marker=&quot;o&quot;,linewidths=2) Pie Chart(饼状图)12345678910111213141516171819202122232425plt.pie( x, explode=None, labels=None, colors=None, autopct=None, pctdistance=0.6, shadow=False, labeldistance=1.1, startangle=None, radius=None, counterclock=True, wedgeprops=None, textprops=None, center=(0, 0), frame=False, rotatelabels=False, *, data=None,)x=[25,25,50]explode=(0.01,0.01,0.01)labels=[&apos;xioaming&apos;,&apos;xiaocheng&apos;,&apos;xiaoxiao&apos;]plt.pie(x,labels=labels,explode=explode,autopct=&quot;%.1f%%&quot;) 3D Plot（3D图）1234567891011import matplotlib as cmfrom mpl_toolkits.mplot3d import Axes3DX=np.arange(-5,5,0.25)Y=np.arange(-5,5,0.25)X,Y=np.meshgrid(X,Y)R=np.sqrt(X**2+Y**2)Z=np.sin(R)fig=plt.figure()ax=Axes3D(fig)ax.plot_surface(X,Y,Z,rstride=1,cstride=1)plt.show()","categories":[{"name":"Technology","slug":"Technology","permalink":"http://lansus.coding.me/categories/Technology/"}],"tags":[{"name":"人工智能","slug":"人工智能","permalink":"http://lansus.coding.me/tags/人工智能/"},{"name":"Python","slug":"Python","permalink":"http://lansus.coding.me/tags/Python/"},{"name":"Matplotlib","slug":"Matplotlib","permalink":"http://lansus.coding.me/tags/Matplotlib/"}]},{"title":"深度学习之路2：numpy的使用小结","slug":"numpy的使用小结","date":"2019-05-23T02:48:49.000Z","updated":"2020-09-14T07:35:37.794Z","comments":true,"path":"numpy的使用小结.html","link":"","permalink":"http://lansus.coding.me/numpy的使用小结.html","excerpt":"","text":"Numpy简介 Numpy 顾名思义，我们可以拆解成number python来解读，就是python里用来处理数字的一个库，下面我们可以引述，numpy官方网站的一段话来介绍 : NumPy is the fundamental package for scientific computing in Python.It is a Python library that provides a multidimensional array object,various derived objects (such as masked arrays and matrices), and anassortment of routines for fast operations on arrays, includingmathematical, logical, shape manipulation, sorting, selecting, I/O,discrete Fourier transforms, basic linear algebra, basic statisticaloperations, random simulation and much more. At the core of the NumPy package, is the ndarray object. Thisencapsulates n-dimensional arrays of homogeneous data types, with manyoperations being performed in compiled code for performance. There areseveral important differences between NumPy arrays and the standardPython sequences: NumPy arrays have a fixed size at creation, unlike Python lists (which can grow dynamically). Changing the size of an ndarray willcreate a new array and delete the original. The elements in a NumPy array are all required to be of the same data type, and thus will be the same size in memory. The exception:one can have arrays of (Python, including NumPy) objects, therebyallowing for arrays of different sized elements. NumPy arraysfacilitate advanced mathematical and other types of operations onlarge numbers of data. Typically, such operations are executed moreefficiently and with less code than is possible using Python’sbuilt-in sequences. A growing plethora of scientific and mathematical Python-based packages are using NumPy arrays; though these typically supportPython-sequence input, they convert such input to NumPy arrays priorto processing, and they often output NumPy arrays. In other words, inorder to efficiently use much (perhaps even most) of today’sscientific/mathematical Python-based software, just knowing how to usePython’s built-in sequence types is insufficient - one also needs toknow how to use NumPy arrays. 从上面可以看出，Numpy库主要包括多维序列的创建、计算（强调了这里的array数列不是python里的数列类型，比它强大很多）,数列的初始化包含了大量科学计算的数列所需要的初始化，例如正太随机分布多维数列初始化、多维矩阵等。另外numpy也包括数列的处理分析，比用原生态python语句高出几倍效率。 numpy入手Numpy 的下载以及调用Numpy 库一般只有在安装Anaconda 数据包才会自带，如果只是安装了python的朋友可以在控制台输入：1pip install --upgrade numpy 安装完成后，只要在py文件中 import numpy 便可以了 Numpy 的属性及方法这里介绍一个小操作，在Jupyter notebook 中写代码的时候只要在调用方法后输入？执行后就会跳出具体的方法帮助文档，但是包对象的帮助文档调出需要在对象前。 12?numpy # 查看numpynumpy.random? # 查看random方法的使用说明 下面列表是对Numpy的部分属性方法汇总: 方法名 使用说明 举例 备注 array(python.list/tuples) 数据的创建 t=[2,3] numpy.array(t) 创建方式有多种 arange([min,max,interval]) 通过范围创建数列 a=numpy.arange(4,7,2) interval是间隔 范围内不包括max,包括min ndim 所在数列的维度，返回int a.ndim &amp; numpy.ndim(a) 多用于矩阵或多维 shape 多维数列的形状，例如矩阵会返回矩阵行列 numpy.shape(a) &amp; a.shape 复杂维度的形状 add() 数列相加numpy.add(a,b) 等同a+b numpy.add(a,b) zeros([colum,rows…]) 生成一个0对角矩阵 numpy.zeros([3,5]) ones([colum,rows…]) 生成1对角矩阵 numpy.ones([2,2]) dot() 矩阵乘法，不同于a* b numpy.dot(a,b） 矩阵乘法理解 dtype 数列数据类型 numpy.aray(t,dtype=”int32” 定义数据类型 itemsize 字符所占内存大小 t.itemsize fromfuntion(fun(),dtype) 根据函数创建数列 numpy.fromfuntion(getx(2,3),dtyp=”int64”) round(array,place) 同python四舍五入 numpy.round(t,3) place是保留小数第几位 allclose(array1,array2) 比较两个数列是否相同 见下面 矩阵求同 swapaxes() 轴转置 a.swapaxes(2,3) bincont() 数列所在位置的相等数值个数 np.bincount(np.array([1,2,3,4,5,6,4,5,6,4])) 见附录代码，输出列数是array最大值 meshgrid() 获取数列的空间坐标 x,y=np.meshgrid(np.arange(3,6,1),np.arange(3,6,1)) 见附录代码 where(condition,a,b) 根据条件condition来抉择a的数值或者b的 np.where([True,False],a,b) sum () 求和 np.sum(a) mean() 求平均值 c.mean() std() 方差 c.std() in1d(a,b) a中的元素是否在b内 np.in1d(a,b) unique(array) 提取出所有不重复的元素 np.unique([1,1,234,2,2]) 矩阵的操作矩阵转置 a.T 或者通过方法transpose()来转置： 123456789101112 &gt;&gt;&gt; x = np.arange(4).reshape((2,2))&gt;&gt;&gt; xarray([[0, 1], [2, 3]])&gt;&gt;&gt;&gt;&gt;&gt; np.transpose(x)array([[0, 2], [1, 3]])&gt;&gt;&gt;&gt;&gt;&gt; x = np.ones((1, 2, 3))&gt;&gt;&gt; np.transpose(x, (1, 0, 2)).shape(2, 1, 3) 求逆矩阵linalg 这个包是所有线性代数操作方法的集合包 1numpy.linalg.inv(np.dot(a.T,a)) 求同我们如果需要检测逆矩阵是否正确，就可以通过逆矩阵和矩阵乘积是否和1对角矩阵相同就行了123a_t=np.linalg.inv(a)print(np.dot(a,a_t))np.allclose(np.dot(a,a_t),np.eye(2)) Numpy数据的保存和读取 下面说的时常用文件存储的方式。 单个数据存储 12345678 # 数据存储单组np.save(&quot;a.npy&quot;,a)print(np.load(&quot;a.npy&quot;))#存储多组np.savez(&quot;b.npz&quot;,x=a,y=d)np.load(&quot;b.npz&quot;)[&apos;y&apos;]#存储成txt文件np.savetxt(&quot;x.txt&quot;,a) 附录是上面所说知识点的用法例子 We can create numpy arrays from native python tuples or lists. 1234import numpy as nptp=([1,2],[34,4])a=np.array(tp,dtype=\"int32\")print(a.shape) (2, 2) 1print(np.arange(5,18,1)) #范围内特定等间距递增 [ 5 6 7 8 9 10 11 12 13 14 15 16 17] 1print(np.linspace(0,10,11)) # 范围内间距平分 [ 0. 1. 2. 3. 4. 5. 6. 7. 8. 9. 10.] 12c=np.arange(30).reshape(3,5,2)c array([[[ 0, 1], [ 2, 3], [ 4, 5], [ 6, 7], [ 8, 9]], [[10, 11], [12, 13], [14, 15], [16, 17], [18, 19]], [[20, 21], [22, 23], [24, 25], [26, 27], [28, 29]]]) 1c.sum(axis=2) array([[ 1, 5, 9, 13, 17], [21, 25, 29, 33, 37], [41, 45, 49, 53, 57]]) 123d=[1,4],[4,5]d=np.array(d)a.dot(d)vvv array([[ 9, 14], [ 50, 156]]) One dimissions arrays 1np.arange(3,25).shape (22,) 1np.shape(a) (2, 2) 1np.zeros([3,5]) array([[0., 0., 0., 0., 0.], [0., 0., 0., 0., 0.], [0., 0., 0., 0., 0.]]) 1np.dot(a,b) array([[ 9, 14], [ 50, 156]]) 12a*b array([[ 1, 8], [136, 20]]) 需要注意的地方，从原数列下标取值，会污染原来数列,而python的数列是没有污染这种概念 123456 num=[1,3,45,6,7,8]n=np.array(num)a_slice=n[2:4]a_slice[0]=1000000print(a_slice)print(n) [1000000 6] [ 1 3 1000000 6 7 8] 1n.itemsize 4 1234def f(x,y): # 通过函数来创建array return 4*x+ynd=np.fromfunction(f,(3,4),dtype=\"int\")nd array([[ 0, 1, 2, 3], [ 4, 5, 6, 7], [ 8, 9, 10, 11]]) 根据条件选取的例子，员工五天上班的时间，找出周四的上班时间 1234name=['wangjun','xiaoming','john','tom','qingqing']names=np.array(name)worktime=np.round(np.random.randn(5,5)+8.0,2)worktime array([[8.95, 7.16, 7.48, 8.49, 8.27], [8.26, 9.41, 6.98, 8.78, 8.62], [9.05, 8.41, 9.86, 8.74, 9.02], [7.86, 6.18, 7.34, 7.55, 7.12], [9.7 , 7.54, 6.47, 7.71, 9.21]]) 1print(worktime[names=='john']) [[9.05 8.41 9.86 8.74 9.02]] 1worktime.transpose(2) --------------------------------------------------------------------------- ValueError Traceback (most recent call last) &lt;ipython-input-100-1d384739e9f7&gt; in &lt;module&gt; ----&gt; 1 worktime.transpose(2) ValueError: axes don&apos;t match array 1234a_t=np.linalg.inv(a)print(np.dot(a,a_t))np.allclose(np.dot(a,a_t),np.eye(2)) [[1. 0.] [0. 1.]] True 12#bincount()np.bincount(np.array([1,2,3,4,200,1000,4,5,6,4])) array([0, 1, 1, ..., 0, 0, 1], dtype=int64) 12pointx,pointy=np.meshgrid(np.arange(-10,10,0.02),np.arange(-10,10,0.020))pointx array([[-10. , -9.98, -9.96, ..., 9.94, 9.96, 9.98], [-10. , -9.98, -9.96, ..., 9.94, 9.96, 9.98], [-10. , -9.98, -9.96, ..., 9.94, 9.96, 9.98], ..., [-10. , -9.98, -9.96, ..., 9.94, 9.96, 9.98], [-10. , -9.98, -9.96, ..., 9.94, 9.96, 9.98], [-10. , -9.98, -9.96, ..., 9.94, 9.96, 9.98]]) 1pointy array([[-10. , -10. , -10. , ..., -10. , -10. , -10. ], [ -9.98, -9.98, -9.98, ..., -9.98, -9.98, -9.98], [ -9.96, -9.96, -9.96, ..., -9.96, -9.96, -9.96], ..., [ 9.94, 9.94, 9.94, ..., 9.94, 9.94, 9.94], [ 9.96, 9.96, 9.96, ..., 9.96, 9.96, 9.96], [ 9.98, 9.98, 9.98, ..., 9.98, 9.98, 9.98]]) 123456#meshgridz=pointx**2+pointy**2import matplotlib.pyplot as mpmp.imshow(z)mp.colorbar()mp.show() 1234# whereprint(a)print(d)np.where([False,True],a,d) [[ 1 2] [34 4]] [[1 4] [4 5]] array([[1, 2], [4, 4]]) 12#inldnp.in1d([2,3,4],a) array([ True, False, True]) 1np.unique([1,1,234,2,2]) array([ 1, 2, 234]) 12345678# 数据存储单组np.save(\"a.npy\",a)print(np.load(\"a.npy\"))#存储多组np.savez(\"b.npz\",x=a,y=d)np.load(\"b.npz\")['y']#存储成txt文件np.savetxt(\"x.txt\",a) [[ 1 2] [34 4]] 12 #参考资料 https://www.numpy.org/devdocs/user/quickstart.html","categories":[{"name":"Technology","slug":"Technology","permalink":"http://lansus.coding.me/categories/Technology/"}],"tags":[{"name":"numpy","slug":"numpy","permalink":"http://lansus.coding.me/tags/numpy/"},{"name":"python","slug":"python","permalink":"http://lansus.coding.me/tags/python/"}]},{"title":"深度学习之路1：python环境和Jupter notebook使用","slug":"python环境和Jupter notebook使用","date":"2019-05-21T06:26:47.000Z","updated":"2020-09-14T07:35:37.795Z","comments":true,"path":"python环境和Jupter notebook使用.html","link":"","permalink":"http://lansus.coding.me/python环境和Jupter notebook使用.html","excerpt":"","text":"我开始学习人工智能，希望写下自己的想学习笔记，帮助跟我一样的朋友。 python 环境的搭建当前python的开发版本已经是pyhon3.7了。我直接安装的Anaconda库，里面自带的python3.7,可以点击链接下载。下载安装后，注意最好切换了路径到其他盘，因为这个开源包比较大。我说直接安装pycharm的miniconda版本的，所以全部打包下载下来了。但是请注意，通过pycharm 安装miniconda，它是不会自动配置环境变量的，在控制台上是无法直接使用的，所以把anaconda的环境变量配置如下，在path里面加入（wodeAnaconda路径是C:\\Users\\Administrator\\miniconda3）：1234C:\\Users\\Administrator\\miniconda3;C:\\Users\\Administrator\\miniconda3\\Library;C:\\Users\\Administrator\\miniconda3\\Library\\bin;C:\\Users\\Administrator\\miniconda3\\Scripts; 配置完成后，控制台可以使用python和pip了。 使用Jupyter notebook交互我们在控制台输入1Jupyter notebook 如果报未找到命令，则安装的python没有自带Jupyter,我们可以安装，安装命令是：1pip install Jupyter notebook 修改Jupyter notebook默认路径Jupyter notebook 的默认路径很不友好，一般那是python所在路径父文件夹，我们可以对其进行修改，首先需要找到它的配置文件。在控制台输入：1jupyter notebook --generate-config 然后控制台会显示初始化文件的位置打开它，加入： 1c.NotebookApp.notebook_dir=&apos;E:&apos; 重新打开Jupyter notebook 就会发现默认路径改变了。 增加Anaconda的python运行环境python2.7和python3.x的代码语言不同，日过偶们需要运行python2.x的文件就会报错，所以我们需要学会切换环境， 下载环境我们需要先下载所需要的环境，在控制台输入：1conda create -n dev_name python=2.7 上面的dev_name是自己定义的所下载环境的名字，我的设置成py27,可以自己自定义。下载完毕以后，我们可以通过以下命令切换 切换环境1activate dev_name 进行切换，切换成功就会在下图红色方框里会是你自定义的dev_name。 ##下载 ipykernel输入以下命令：1pip install ipykernel 把内核加入Jupyter在控制台输入以下命令：1python -m ipykernel install --name dev_name 当出现提示 Installed kernelspec Py27 in C:\\ProgramData\\jupyter\\kernels\\py27 就说明天成功了","categories":[{"name":"Technology","slug":"Technology","permalink":"http://lansus.coding.me/categories/Technology/"}],"tags":[{"name":"python","slug":"python","permalink":"http://lansus.coding.me/tags/python/"},{"name":"人工智能","slug":"人工智能","permalink":"http://lansus.coding.me/tags/人工智能/"}]},{"title":"SEO博客优化（二）","slug":"seo优化（二）","date":"2019-04-28T07:33:12.000Z","updated":"2020-09-14T07:35:37.795Z","comments":true,"path":"seo优化（二）.html","link":"","permalink":"http://lansus.coding.me/seo优化（二）.html","excerpt":"","text":"接着前面的继续设置。 开启推送将网站链接提交到百度，百度搜索引擎提交入口 ,然后验证你的网站，这一点网上有很详细的教程我就不复述了，验证确认你的网站后，继续验证你的网站的robots.txt和sitemap文件是否可用，一般都是可用的。然后就可以开始推送了，基本上推送有三种方式：主动推送&gt;自动推送&gt;sitemap三种，一般主动提交比手动提交效果好 自动推送我们首先要在百度搜索引擎提交入口入口注册，注册登录后，我们需要可以点击验证了在\\themes\\next\\source\\js下新建baidu.js文件，录入一下代码：1234567891011121314&lt;script&gt;(function()&#123; var bp = document.createElement(&apos;script&apos;); var curProtocol = window.location.protocol.split(&apos;:&apos;)[0]; if (curProtocol === &apos;https&apos;) &#123; bp.src = &apos;https://zz.bdstatic.com/linksubmit/push.js&apos;; &#125; else &#123; bp.src = &apos;http://push.zhanzhang.baidu.com/push.js&apos;; &#125; var s = document.getElementsByTagName(&quot;script&quot;)[0]; s.parentNode.insertBefore(bp, s);&#125;)();&lt;/script&gt; 然后再blog\\scaffolds\\post.md中添加1&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/baidu.js&quot;&gt;&lt;/script&gt; 自动推送我不大愿意用，是因为如果在notepad++或者其他markdown带预览插件的编辑器里，会一直滩js编译报错的弹框，所以我还是选择了手动推送。胡总和在文章写完之前手动添加这一行也可以。 手动推送在blog下写一个脚本文件，每次写完博客后可以手动提交，123456789101112131415161718192021222324252627282930313233343536373839#coding:utf-8import requestsimport timefrom bs4 import BeautifulSoup as bpprint (&apos;Langzi.Fun 自动推送开启....&apos;,&apos;utf-8&apos;)time.sleep(0.5)site_url = &apos;http://lansus.coding.me/baidusitemap.xml&apos;try: print (&apos;Lansus Blog获取sitemap链接....&apos;,&apos;utf-8&apos;) data_ = bp(requests.get(site_url).content,&apos;lxml&apos;)except Exception.e: print (e)list_url=[]def get_(data): headers=&#123;&apos;User-Agent&apos;:&apos;curl/7.12.1 &apos;, &apos;Content-Type&apos;:&apos;text/plain &apos;&#125; try: r = requests.post(url=&apos;http://data.zz.baidu.com/urls?site=lansus.coding.me&amp;token=Gj7x8JuAgpKFb4oY&apos;,data=data) print (r.status_code) print (r.content) except Exception as e: print (e)print (&apos;---------------------------------&apos;)for x,y in enumerate(data_.find_all(&apos;loc&apos;)): print ( x,y.string) list_url.append(y.string.replace(&apos;http://&apos;,&apos;http://&apos;))print (&apos;---------------------------------&apos;)print (&apos;Lansus Blog 开始推送....&apos;,&apos;utf-8&apos;)for x in list_url: print (&apos;Lansus Blog 当前推送条目为:&apos;,x) get_(x) 脚本的运行可以自行百度，python安装。","categories":[{"name":"Technology","slug":"Technology","permalink":"http://lansus.coding.me/categories/Technology/"},{"name":"html","slug":"Technology/html","permalink":"http://lansus.coding.me/categories/Technology/html/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://lansus.coding.me/tags/hexo/"},{"name":"SEO优化","slug":"SEO优化","permalink":"http://lansus.coding.me/tags/SEO优化/"}]},{"title":"hexo 个人博客SEO优化（一）","slug":"SEO优化","date":"2019-04-28T05:33:12.000Z","updated":"2020-09-14T07:35:37.793Z","comments":true,"path":"SEO优化.html","link":"","permalink":"http://lansus.coding.me/SEO优化.html","excerpt":"","text":"书不记，熟读可记；义不精，细思可精；惟有志不立，直是无著力处。——朱熹 前言我最近在搭建hexo 个人博客，优点是独立属于自己的，但是缺点也很明显，在主流的搜索引擎几乎无法搜索关于自己的帖子，所以需要自己SEO优化，下面是我的相关操作，希望能够给大家带来帮助。 本地文章优化添加sitemapsitemap 顾名思义，Sitemap 可方便网站管理员通知搜索引擎他们网站上有哪些可供抓取的网页。最简单的 Sitemap形式，就是XML文件，在其中列出网站中的网址以及关于每个网址的其他元数据（上次更新的时间、更改的频率以及相对于网站上其他网址的重要程度为何等），以便搜索引擎可以更加智能地抓取网站。 1.安装插件我们需要下载两个站点插件 123npm install hexo-generator-sitemap --save # sitemap.xmlnpm install hexo-generator-baidu-sitemap --save # baidu-sitemap.xml 2.添加配置文件安装完成以后，需要在站点配置文件的_config.xml（注：不是主题配置文件）中添加 12345# 自动生成sitemapsitemap: path: sitemap.xmlbaidusitemap: path: baidusitemap.xml 这样，每次hexo general 都会自动生成配置文件sitemap.xml（google引擎）和 baidu-sitemap.xml（百度引擎）。 3.优化归档结构seo搜索引擎优化中，网站的最佳结构是用户从首页点击三次就可以到达任何一个页面，但是我们使用hexo编译的站点打开文章的url是：sitename/year/mounth/day/title四层的结构，这样的url结构很不利于seo，爬虫就会经常爬不到我们的文章，于是，我们可以将url直接改成sitename/title的形式，并且title最好是用英文，在根目录的配置文件下修改permalink如下 1234url: http://你的网站root: /permalink: :title.htmlpermalink_defaults: 重新hexo general后，随便打开一篇日志，url的绝对地址结构就改成 http://yoursite/title.xml 了 robots配置12345678910111213User-agent: *Allow: /Allow: /home/Allow: /archives/Allow: /about/Disallow: /vendors/Disallow: /js/Disallow: /css/Disallow: /fonts/Disallow: /vendors/Disallow: /fancybox/Sitemap: http://lansus.coding.me/sitemap.xmlSitemap: http://lansus.coding.me/baidusitemap.xml Allow表示允许被访问的，Disallow是不允许的意思。注意后面两个Sitemap就是网站地图了。而网站地图前面说了是给爬虫用的。这里配置在robots中。把上面的代码保存为robots.txt放入theme/yourtheme/source 。在编译后这个文件会出现在blog/public中。后面会使用到 关键词和描述的优化下面实对关键词的优化，因为搜索姻亲对关键词也会抓取。next主题模板文件大部分是swig文件，但是新的大部分主题的layout模板文件是ejs写的，我们在确定主题模板文件是否有对keyword的生成，只要查找theme/yourtheme/layout/_partials\\head.文件后缀即可。查找里面是否有theme.keywords的字段，下面给出next主题的head.swig和hiker主题的head.ejs代码。123456789101112131415# next theme head.swig&#123;% if page.keywords %&#125; &lt;meta name=&quot;keywords&quot; content=&quot;&#123;&#123; page.keywords &#125;&#125;&quot; /&gt;&#123;% elif page.tags and page.tags.length %&#125; &lt;meta name=&quot;keywords&quot; content=&quot;&#123;% for tag in page.tags %&#125;&#123;&#123; tag.name &#125;&#125;,&#123;% endfor %&#125;&quot; /&gt;&#123;% elif theme.keywords %&#125; &lt;meta name=&quot;keywords&quot; content=&quot;&#123;&#123; theme.keywords &#125;&#125;&quot; /&gt;&#123;% endif %&#125;# hiker theme &lt;% if (page.keywords)&#123; %&gt; &lt;meta name=&quot;keywords&quot; content=&quot;&lt;%- page.keywords %&gt;&quot; /&gt; &lt;% &#125; else if (theme.keywords)&#123; %&gt; &lt;meta name=&quot;keywords&quot; content=&quot;&lt;%- theme.keywords %&gt;&quot; /&gt; 上面的代码并不需要只是用来判断keyword是否有生成，下面是需要我们添加的，在 \\scaffolds\\post.md中：12keywords: description: 然后就可以在新写的文件里添加keyword,格式是[1,2,3] #开启压缩文件 因为hexo生成的文件是静态html，里面占用了大量的空白符。使用gulp进行压缩接口提高访问速度并且降低内存。 进行下列操作1234npm install gulp@3.9.1 (gulp 4.0.0以上压缩会对现有hexo文件报错)npm install gulp-minify-css gulp-uglify gulp-htmlmin gulp-htmlclean gulp --savenpm install gulp-concatnpm install gulp-imagemin 在hexo blog文件夹下创建gulpfile.js:12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061var gulp = require(&apos;gulp&apos;), uglify = require(&apos;gulp-uglify&apos;), cssmin = require(&apos;gulp-minify-css&apos;), imagemin = require(&apos;gulp-imagemin&apos;), htmlmin = require(&apos;gulp-htmlmin&apos;), htmlclean = require(&apos;gulp-htmlclean&apos;); concat = require(&apos;gulp-concat&apos;);//JS压缩gulp.task(&apos;uglify&apos;, function() &#123; return gulp.src([&apos;./public/js/**/.js&apos;,&apos;!./public/js/**/*min.js&apos;])//只是排除min.js文件还是不严谨，一般不会有问题，根据自己博客的修改我的修改为return gulp.src([&apos;./public/**/*.js&apos;,&apos;!./public/zuoxi/**/*.js&apos;,,&apos;!./public/radio/**/*.js&apos;]) .pipe(uglify()) .pipe(gulp.dest(&apos;./public/js&apos;));//对应修改为./public即可&#125;);//public-fancybox-js压缩gulp.task(&apos;fancybox:js&apos;, function() &#123; return gulp.src(&apos;./public/vendors/fancybox/source/jquery.fancybox.js&apos;) .pipe(uglify()) .pipe(gulp.dest(&apos;./public/vendors/fancybox/source/&apos;));&#125;);// 合并 JSgulp.task(&apos;jsall&apos;, function () &#123; return gulp.src(&apos;./public/**/*.js&apos;) // 压缩后重命名 .pipe(concat(&apos;app.js&apos;)) .pipe(gulp.dest(&apos;./public&apos;));&#125;);//public-fancybox-css压缩gulp.task(&apos;fancybox:css&apos;, function() &#123; return gulp.src(&apos;./public/vendors/fancybox/source/jquery.fancybox.css&apos;) .pipe(cssmin()) .pipe(gulp.dest(&apos;./public/vendors/fancybox/source/&apos;));&#125;);//CSS压缩gulp.task(&apos;cssmin&apos;, function() &#123; return gulp.src([&apos;./public/css/main.css&apos;,&apos;!./public/css/*min.css&apos;]) .pipe(cssmin()) .pipe(gulp.dest(&apos;./public/css/&apos;));&#125;);//图片压缩gulp.task(&apos;images&apos;, function() &#123; gulp.src(&apos;./public/uploads/*.*&apos;) .pipe(imagemin(&#123; progressive: false &#125;)) .pipe(gulp.dest(&apos;./public/uploads/&apos;));&#125;);// 压缩 public 目录 html文件 public/**/*.hmtl 表示public下所有文件夹中html，包括当前目录 gulp.task(&apos;minify-html&apos;, function() &#123; return gulp.src(&apos;./public/**/*.html&apos;) .pipe(htmlclean()) .pipe(htmlmin(&#123; removeComments: true, minifyJS: true, minifyCSS: true, minifyURLs: true, &#125;)) .pipe(gulp.dest(&apos;./public&apos;)) &#125;);gulp.task(&apos;build&apos;, [&apos;uglify&apos;, &apos;cssmin&apos;, &apos;fancybox:js&apos;, &apos;fancybox:css&apos;, &apos;jsall&apos;,&apos;images&apos;]);//, &apos;minify-html&apos; 在根目录下的package.json文件中生成写入scripts:123&quot;scripts&quot;: &#123; &quot;build&quot;:&quot;hexo clean &amp;&amp; hexo g &amp;&amp; gulp build&quot; &#125; 全文件为：123456789101112131415161718192021222324252627282930313233343536&#123; &quot;name&quot;: &quot;hexo-site&quot;, &quot;version&quot;: &quot;0.0.0&quot;, &quot;private&quot;: true, &quot;hexo&quot;: &#123; &quot;version&quot;: &quot;3.8.0&quot; &#125;, &quot;dependencies&quot;: &#123; &quot;gulp&quot;: &quot;^3.9.1&quot;, &quot;gulp-concat&quot;: &quot;^2.6.1&quot;, &quot;gulp-htmlclean&quot;: &quot;^2.7.22&quot;, &quot;gulp-htmlmin&quot;: &quot;^5.0.1&quot;, &quot;gulp-minify-css&quot;: &quot;^1.2.4&quot;, &quot;gulp-uglify&quot;: &quot;^3.0.2&quot;, &quot;hexo&quot;: &quot;^3.8.0&quot;, &quot;hexo-deployer-git&quot;: &quot;^1.0.0&quot;, &quot;hexo-generator-archive&quot;: &quot;^0.1.5&quot;, &quot;hexo-generator-baidu-sitemap&quot;: &quot;^0.1.6&quot;, &quot;hexo-generator-category&quot;: &quot;^0.1.3&quot;, &quot;hexo-generator-feed&quot;: &quot;^1.2.2&quot;, &quot;hexo-generator-index&quot;: &quot;^0.2.1&quot;, &quot;hexo-generator-json-content&quot;: &quot;^4.1.3&quot;, &quot;hexo-generator-searchdb&quot;: &quot;^1.0.8&quot;, &quot;hexo-generator-sitemap&quot;: &quot;^1.2.0&quot;, &quot;hexo-generator-tag&quot;: &quot;^0.2.0&quot;, &quot;hexo-renderer-ejs&quot;: &quot;^0.3.1&quot;, &quot;hexo-renderer-marked&quot;: &quot;^0.3.2&quot;, &quot;hexo-renderer-stylus&quot;: &quot;^0.3.3&quot;, &quot;hexo-server&quot;: &quot;^0.3.3&quot; &#125;, &quot;scripts&quot;: &#123; &quot;build&quot;:&quot;hexo clean &amp;&amp; hexo g &amp;&amp; gulp build&quot; &#125;&#125; 这样可以用npm run build 一次性搞定 三个操作了,每次打包带时候会生成压缩文件。","categories":[{"name":"Technology","slug":"Technology","permalink":"http://lansus.coding.me/categories/Technology/"},{"name":"html","slug":"Technology/html","permalink":"http://lansus.coding.me/categories/Technology/html/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://lansus.coding.me/tags/hexo/"},{"name":"SEO优化","slug":"SEO优化","permalink":"http://lansus.coding.me/tags/SEO优化/"}]},{"title":"我的世界","slug":"我的世界","date":"2019-04-25T06:55:53.000Z","updated":"2020-09-14T07:35:37.796Z","comments":true,"path":"我的世界.html","link":"","permalink":"http://lansus.coding.me/我的世界.html","excerpt":"","text":"每一个生灵来到这个世界，都是一份恩赐。我喜欢这个世界。 每日睁开眼，我就能知道，今天的时光将等待着我去做些什么，学习什么，和创造什么，我很自由，我能干我自己想干的事情，巨大的幸福感瞬间包住了我。 每次走在路上，伸开手掌，能够确切的感受到，空气和风摩擦手间的感觉，地球一下子缩小到了我的眼睛里，好像看到了地球上每一个生灵的呼吸，植物的的灵气和吐纳。 我想，人是要靠境界和灵魂超越肉体的局限的，肉体必须承受于自然法则之下，可思想却能够飞出去，不断地提升精神所能领悟的高度，每一分的提升，就越能感受到生命蓬勃的巨大喜悦和自我认知的熟谙。感恩世界给予的每一分资源和能够拥有无限的自由自我修行在这和平的年代。 叔本华说，我们能够做我们想做的，但不能够得到我们想要的。工作，学习，都只是我生活的部分，我会兢兢业业的做好工作中的每一件事，像在制作一件艺术品一样，我希望能看到，我创造的东西，能够得到荣耀。 我相信将来，每一个普通人，个人幸福感的最大来源将会来自自我生产，而不是索取与不断的追逐。幸福在依本性而为的事物之中，人是独立的个体，这无可否认。我总是花很多的时间去思考幸福是什么，它是如何在我的生活中产生。对于朋友。我希望我对待我的好朋友，甚于自己。他比我小，我希望我会宽容爱护，他比我大，我希望我会接纳尊重。会做一个温暖的人，温暖身边每一个人。我是否能够做的更多让它变得更多。它是如此安宁，即使此时离去，也是毫无害怕，这一秒也是上一秒，也是下一秒，每一秒我都是自由而幸福。充分使用我的时光中的每一秒，享受现在，努力现在。我尊重我自己，所以我尊重别人，尊重我的职业，尊重每份努力下的血汗和身影。我思考和确认过，我的人生意义不在于我个人的享受，我更乐于分享我的感动，帮助他人的进步。我相信未来或穷或富，勤以修身 俭以养德 ，将会贯彻终生。相信我是世界最幸福的人，无论我的过去或者未来会遭受怎样的厄运，我有我的生命和信仰，我想我会在余生通过自己的努力和领悟走到人生的尽头，看到人类一生当中最光辉宝贵的东西，远离庸碌。我喜欢看别人的眼睛，眼睛是有光芒的 ，就像人是有光辉的，那种很急切的寻找，想从中看到一个独一无二的灵魂和新的世界。有的眼睛很明亮，有的眼睛很倔强，有的总是闪躲。它在告诉我很多，你的信仰，性格，和快乐。 我的世界，自由，幸福，信仰，与自我修行。 (function(){ var bp = document.createElement('script'); var curProtocol = window.location.protocol.split(':')[0]; if (curProtocol === 'https') { bp.src = 'https://zz.bdstatic.com/linksubmit/push.js'; } else { bp.src = 'http://push.zhanzhang.baidu.com/push.js'; } var s = document.getElementsByTagName(\"script\")[0]; s.parentNode.insertBefore(bp, s); })();","categories":[{"name":"个人感悟","slug":"个人感悟","permalink":"http://lansus.coding.me/categories/个人感悟/"}],"tags":[{"name":"感悟","slug":"感悟","permalink":"http://lansus.coding.me/tags/感悟/"},{"name":"人生","slug":"人生","permalink":"http://lansus.coding.me/tags/人生/"}]}]}